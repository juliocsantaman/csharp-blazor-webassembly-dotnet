@page "/editproduct"
@* @page "/editproduct/{productIdParemeter}" *@
@using BlazorApp2.Shared;
@using BlazorApp2.Models;
@using BlazorApp2.Services;
@using Microsoft.AspNetCore.WebUtilities;
@using Microsoft.Extensions.Primitives;
@inject IProductService productService;
@inject ICategoryService categoryService;
@inject NavigationManager NavigationManager;

<PageTitle>Edit product</PageTitle>
<ModuleTitle Title="Edit product"></ModuleTitle>

<button class="btn btn-dark" @onclick="@(() => NavigationManager.NavigateTo("/products"))">Go to products</button>

<EditForm Model="@product" OnSubmit="@Save">
    <div class="row">
        <div class="col-8 form-group">
            <label for="title" class="col-form-label">Title</label>
            <InputText id="title" @bind-Value="product.Title" class="form-control" />
        </div>
        <div class="col form-group">
            <label for="price" class="col-form-label">Price</label>
            <InputNumber id="price" @bind-Value="product.Price" min="0" class="form-control" />
        </div>
    </div>
    <div class="row">
        <div class="col form-group">
            <label for="category" class="col-form-label">Category</label>
            <InputNumber id="title" @bind-Value="product.CategoryId" class="form-control" />

        </div>
        <div class="col form-group">
            <label for="image" class="col-form-label">Image (Url)</label>
            <InputText id="image" @bind-Value="product.Image" required class="form-control" />
        </div>
    </div>
    <div class="form-group">
        <label for="description" class="col-form-label">Description</label>
        <InputTextArea id="description" @bind-Value="product.Description" class="form-control"></InputTextArea>
    </div>

    <hr />
    <button class="btn btn-primary" type="submit">Save</button>
</EditForm>

@code
{
    Product product = new();
    // private List<Category> categories = new List<Category>();

    [Parameter]
    public int productIdParemeter { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var uri = NavigationManager.ToAbsoluteUri(NavigationManager.Uri);
        if (QueryHelpers.ParseQuery(uri.Query).TryGetValue("productId", out var productId))
        {
            productIdParemeter = int.Parse(productId);
            List<Product> products = await productService.Get();
            product = products.Find(p => p.Id == productIdParemeter);
            // Further logic to load the product details using the ProductId
        }

        //categories = await categoryService.Get();
    }

    private async Task Save()
    {
        product.Images = new string[1] { product.Image };
        await productService.Edit(productIdParemeter, product);
        NavigationManager.NavigateTo("/products");
    }

    // public override async Task SetParametersAsync(ParameterView parameters)
    // {
      
    //     if (parameters.TryGetValue<string>(nameof(productIdParemeter), out var value))
    //     {
    //         if (value is not null)
    //         {
    //             productIdParemeter = int.Parse(value);
    //         }
    //     }
    //     await base.SetParametersAsync(parameters);
    // }
}